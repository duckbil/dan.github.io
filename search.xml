<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>R语言</title>
    <url>/2023/12/13/R/</url>
    <content><![CDATA[<h1 id="R语言学习"><a href="#R语言学习" class="headerlink" title="R语言学习"></a>R语言学习</h1><p>如果你闲着没事干又想做点有意义的事，而且你所学专业又涉及到R语言的话，可以试试Swirl，一个非常适合R语言初学者的包，以一种闯关式的学习方式来学习R语言，特别是回答正确都会出现一句鼓励的话，满满的成就感，特别适合无聊时来上那么一两关，打发时间的同时又能学习到新知识，正可谓一举两得。</p>
<span id="more"></span>

<h2 id="Swirl包的下载"><a href="#Swirl包的下载" class="headerlink" title="Swirl包的下载"></a>Swirl包的下载</h2><p>打开 RStudio（如果没有 RStudio，则直接打开 R）并在控制台中键入以下内容：</p>
<blockquote>
<p>install.packages(“swirl”)</p>
</blockquote>
<h3 id="Swirl包的使用"><a href="#Swirl包的使用" class="headerlink" title="Swirl包的使用"></a>Swirl包的使用</h3><p>这是每次要运行 swirl 时重复的唯一步骤。</p>
<blockquote>
<p>library(“swirl”)<br>swirl()</p>
</blockquote>
<p>在学习过程中想了解更多功能可以输入 </p>
<blockquote>
<p>info()</p>
</blockquote>
<p>实在想不出答案的话可以输入</p>
<blockquote>
<p>skip()</p>
</blockquote>
<p>想了解更多方面或者进一步的学习R语言可以点击 <strong><a href="https://swirlstats.com/">swirl</a></strong> 查看，希望对你有所帮助。</p>
]]></content>
      <categories>
        <category>R语言</category>
        <category>Swirl包</category>
      </categories>
      <tags>
        <tag>R语言入门</tag>
      </tags>
  </entry>
  <entry>
    <title>上善若水</title>
    <url>/2023/11/19/ShangShanRuoShui/</url>
    <content><![CDATA[<p>上善若水<br>水善利万物而不争，处众人之所恶，故几于道。</p>
<span id="more"></span>
<p>居，善地；与，善仁；心，善渊；言，善信；政，善治；事，善能；动，善时。<br>夫惟不争，故无尤。<br>                  ———-《道德经》</p>
]]></content>
      <categories>
        <category>古文</category>
        <category>战国</category>
        <category>道德经</category>
      </categories>
      <tags>
        <tag>老子</tag>
        <tag>道</tag>
      </tags>
  </entry>
  <entry>
    <title>swirl包（Vector）</title>
    <url>/2023/12/13/swirl4/</url>
    <content><![CDATA[<h1 id="Swirl-第四关"><a href="#Swirl-第四关" class="headerlink" title="Swirl 第四关"></a>Swirl 第四关</h1><p>在R语言中最简单和普通的数据结果就是向量，本文内容为swirl包第四关vector（向量）的答案以及一些易踩坑点，虽然有答案很方便，但还是要自己多思考，才能取得进步。</p>
<span id="more"></span>

<h2 id="First-create-a-numeric-vector-num-vect"><a href="#First-create-a-numeric-vector-num-vect" class="headerlink" title="First, create a numeric vector num_vect"></a>First, create a numeric vector num_vect</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt;num_vect &lt;- c(0.5,55,-10,6)</span><br></pre></td></tr></table></figure>
<h2 id="Now-create-a-variable-called-tf"><a href="#Now-create-a-variable-called-tf" class="headerlink" title="Now, create a variable called tf"></a>Now, create a variable called tf</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt;tf &lt;- num_vect &lt; 1</span><br></pre></td></tr></table></figure>
<p>接下来两步很简单,这里就不写了</p>
<h2 id="Type-num-vect-6-without-assigning-the-result-to-a-new-variable"><a href="#Type-num-vect-6-without-assigning-the-result-to-a-new-variable" class="headerlink" title="Type num_vect &gt;&#x3D; 6 without assigning the result to a new variable."></a>Type num_vect &gt;&#x3D; 6 without assigning the result to a new variable.</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt; num_vect &gt;= 6</span><br></pre></td></tr></table></figure>
<p>然后是几个判断题,只需要看懂”&amp;”和”|”的含义就会变得很简单</p>
<h2 id="Create-a-character-vector-因为接下来几道题关联性大-所以把答案放在一起"><a href="#Create-a-character-vector-因为接下来几道题关联性大-所以把答案放在一起" class="headerlink" title="Create a character vector (因为接下来几道题关联性大,所以把答案放在一起)"></a>Create a character vector (因为接下来几道题关联性大,所以把答案放在一起)</h2><p>注意大小写</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt; my_char &lt;- c(&quot;My&quot;, &quot;name&quot;, &quot;is&quot;)</span><br><span class="line"></span><br><span class="line">&gt; paste(my_char, collapse = &quot; &quot;)</span><br></pre></td></tr></table></figure>
<p>注：最容易出错的地方就是在这,因为没有输对名字,导致报错,并且my_name会保存错误名字,尽管后面将名字输对也会一直错误,这时候只有输入&gt;bye(),退出swirl后,在控制台输入&gt;rm(my_name),将之前输错的变量删除后,再次进入swirl,输入下面代码才会正确.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt; my_name &lt;- c(my_char, &quot;Swirl&quot;)</span><br><span class="line"></span><br><span class="line">&gt; paste(my_name, collapse = &quot; &quot;)</span><br><span class="line"></span><br><span class="line">&gt; paste(&quot;Hello&quot;, &quot;world!&quot;, sep = &quot; &quot;)</span><br><span class="line"></span><br><span class="line">&gt; paste(c(1:3),c(&quot;X&quot;, &quot;Y&quot;, &quot;Z&quot;), sep = &quot;&quot;)</span><br><span class="line"></span><br><span class="line">&gt; paste(LETTERS, 1:4, sep = &quot;-&quot;)</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>R语言</category>
        <category>Swirl包</category>
      </categories>
      <tags>
        <tag>R语言入门</tag>
      </tags>
  </entry>
  <entry>
    <title>swirl包（Missing values）</title>
    <url>/2023/12/14/swirl5/</url>
    <content><![CDATA[<h1 id="Swirl第五关"><a href="#Swirl第五关" class="headerlink" title="Swirl第五关"></a>Swirl第五关</h1><p>missing values（缺失值）；R语言一般用于统计分析，因此在处理大量数据时，缺失值<br>是一个常见的问题，在发现缺失值后该怎么处理？在第五关，简单解释了缺失值以及统计缺失值。</p>
<span id="more"></span>
<p>这关很简单，只需要理解他的描述就好了，所以就简单的把答案放在一起了。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt; x &lt;- c(44, NA, 5, NA)</span><br><span class="line"></span><br><span class="line">&gt; x*3</span><br><span class="line"></span><br><span class="line">&gt; y &lt;- rnorm(1000)</span><br><span class="line"></span><br><span class="line">&gt; z &lt;- rep(NA, 1000)</span><br><span class="line"></span><br><span class="line">&gt; my_data &lt;- sample(c(y, z), 100)</span><br><span class="line"></span><br><span class="line">&gt; my_na &lt;- is.na(my_data)</span><br><span class="line"></span><br><span class="line">&gt; my_data == NA</span><br><span class="line"></span><br><span class="line">&gt; sum(my_na)</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>R语言</category>
        <category>Swirl包</category>
      </categories>
      <tags>
        <tag>R语言入门</tag>
      </tags>
  </entry>
  <entry>
    <title>swirl包（Matrices and Data Frames）</title>
    <url>/2023/12/15/swirl7/</url>
    <content><![CDATA[<h1 id="Swirl第七关"><a href="#Swirl第七关" class="headerlink" title="Swirl第七关"></a>Swirl第七关</h1><p>Matrices and Data Frames，在第七关，你将学习了使用两种非常重要且常见的数据结构——矩阵和数据框架的基础知识，并初步学会构建。</p>
<span id="more"></span>
<h2 id="参考答案"><a href="#参考答案" class="headerlink" title="参考答案"></a>参考答案</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt; my_vector &lt;- 1:20</span><br><span class="line"></span><br><span class="line">&gt; dim(my_vector)</span><br><span class="line"></span><br><span class="line">&gt; length(my_vector)</span><br><span class="line"></span><br><span class="line">&gt; dim(my_vector) &lt;- c(4, 5)</span><br><span class="line"></span><br><span class="line">&gt; attributes(my_vector)</span><br><span class="line"></span><br><span class="line">&gt; class(my_vector)</span><br><span class="line"></span><br><span class="line">&gt; my_matrix &lt;- my_vector</span><br><span class="line"></span><br><span class="line">&gt; my_matrix2 &lt;- matrix(data = 1:20, nrow = 4, ncol = 5)</span><br><span class="line"></span><br><span class="line">&gt; identical(my_matrix, my_matrix2)</span><br><span class="line"></span><br><span class="line">&gt; patients &lt;- c(&quot;Bill&quot;, &quot;Gina&quot;, &quot;Kelly&quot;, &quot;Sean&quot;)</span><br><span class="line"></span><br><span class="line">&gt; cbind(patients, my_matrix)</span><br><span class="line"></span><br><span class="line">&gt; my_data &lt;- data.frame(patients, my_matrix)</span><br><span class="line"></span><br><span class="line">&gt; cnames &lt;- c(&quot;patient&quot;, &quot;age&quot;, &quot;weight&quot;, &quot;bp&quot;, &quot;rating&quot;, &quot;test&quot;)</span><br><span class="line"></span><br><span class="line">&gt; colnames(my_data) &lt;- cnames</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>R语言</category>
        <category>Swirl包</category>
      </categories>
      <tags>
        <tag>R语言入门</tag>
      </tags>
  </entry>
  <entry>
    <title>swirl包（Function）</title>
    <url>/2023/12/20/swirl9/</url>
    <content><![CDATA[<h1 id="Swirl包第九关"><a href="#Swirl包第九关" class="headerlink" title="Swirl包第九关"></a>Swirl包第九关</h1><p>  第九关的内容主要讲的是Function（函数），该关会简单介绍几种R语言里基础的函数。</p>
<span id="more"></span>
<h2 id="Sys-Date"><a href="#Sys-Date" class="headerlink" title="Sys.Date()"></a>Sys.Date()</h2><p>  Sys.Date()函数基于你电脑的环境会返回一个变量（你的电脑上的日期）</p>
<h2 id="mean"><a href="#mean" class="headerlink" title="mean()"></a>mean()</h2><p>  mean()函数会读取你输入的向量里的数，并且返回这些数的平均值。</p>
<h2 id="自己构建函数boring-function-my-mean-remainder"><a href="#自己构建函数boring-function-my-mean-remainder" class="headerlink" title="自己构建函数boring_function(), my_mean(), remainder()"></a>自己构建函数boring_function(), my_mean(), remainder()</h2><h3 id="构建函数boring-function"><a href="#构建函数boring-function" class="headerlink" title="构建函数boring_function()"></a>构建函数boring_function()</h3><p>  在脚本编写区写入以下代码：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">boring_function &lt;- function(x) &#123;</span><br><span class="line">   x</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>该函数功能为输出括号内的数，一个简单且无聊的函数</p>
<h3 id="构建函数my-mean"><a href="#构建函数my-mean" class="headerlink" title="构建函数my_mean()"></a>构建函数my_mean()</h3><p>   在脚本编写区写入以下代码：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">my_mean &lt;- function(my_vector) &#123;</span><br><span class="line">  sum(my_vector)/length(my_vector)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>该函数功能为计算你输入的向量的平均数，如输入：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt;my_mean(c(4, 5, 10))</span><br></pre></td></tr></table></figure>
<p>会得到一个数6.3333</p>
<h3 id="构建remainder-函数"><a href="#构建remainder-函数" class="headerlink" title="构建remainder()函数"></a>构建remainder()函数</h3><p>   在脚本编写区输入以下代码：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">remainder &lt;- function(num, divisor = 2) &#123;</span><br><span class="line">  num %% divisor</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>该函数功能为计算你输入的数除以2后的余数， 如输入：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt;remainder(5)</span><br></pre></td></tr></table></figure>
<p>会得到数：1</p>
<p>也可以自己改变除数，如：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt;remainder(12, 5)</span><br></pre></td></tr></table></figure>
<p>会得到数：2<br>或者可以输入：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt;remainder(divisor = 11, num = 5) #divisor为除数，num为被除数</span><br></pre></td></tr></table></figure>
<p>会得到数：5</p>
<h3 id="构建evaluate-函数"><a href="#构建evaluate-函数" class="headerlink" title="构建evaluate()函数"></a>构建evaluate()函数</h3><p>  在脚本编写区写入以下代码：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">evaluate &lt;- function(func, dat)&#123;</span><br><span class="line">  func(dat)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>该函数可以将函数作为参数</p>
<h3 id="构建telegram-函数"><a href="#构建telegram-函数" class="headerlink" title="构建telegram()函数"></a>构建telegram()函数</h3><p>   在脚本编写区写入以下代码：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">telegram &lt;- function(...)&#123;</span><br><span class="line">  paste(&quot;START&quot;, ..., &quot;STOP&quot;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>功能和boring_function()函数有点像</p>
<h3 id="构建mad-libs-函数"><a href="#构建mad-libs-函数" class="headerlink" title="构建mad_libs()函数"></a>构建mad_libs()函数</h3><p>  在脚本编写区写入代码：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mad_libs &lt;- function(...)&#123;</span><br><span class="line">  args &lt;- list(...)</span><br><span class="line">  place &lt;- args[[&quot;place&quot;]]</span><br><span class="line">  adjective &lt;- args[[&quot;adjective&quot;]]</span><br><span class="line">  noun &lt;- args[[&quot;noun&quot;]]</span><br><span class="line">  paste(&quot;News from&quot;, place, &quot;today where&quot;, adjective, &quot;students took to the streets in protest of the new&quot;, noun, &quot;being installed on campus.&quot;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>可以修改paste内的内容，是一个文本填充和替换的函数，无聊。</p>
<h3 id="自己定义二进制运算符"><a href="#自己定义二进制运算符" class="headerlink" title="自己定义二进制运算符"></a>自己定义二进制运算符</h3><p>  在脚本编写区写入以下代码：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&quot;%p%&quot; &lt;- function(left, right)&#123; # Remember to add arguments!</span><br><span class="line">  paste(left, right)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>使用“%p%”可以结合其两边的文字，例如：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt;&#x27;I&#x27;%p%&#x27;love&#x27;%p%&#x27;R!&#x27;</span><br></pre></td></tr></table></figure>
<p>会得到：”I love R!”</p>
]]></content>
      <categories>
        <category>R语言</category>
        <category>Swirl包</category>
      </categories>
      <tags>
        <tag>R语言入门</tag>
      </tags>
  </entry>
  <entry>
    <title>罗丹日记1</title>
    <url>/2022/03/13/%E7%BD%97%E4%B8%B9%E6%97%A5%E8%AE%B01/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="密码错误，请重试" data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="823594fd211060ed686ce2e948bf5aa8335133cb154986adaed394bf4ff9ac52">7aff1eb6359dfecb858d3e59376d8e8b0a52fff1e9a5b8cca3c878172de6c16786a1a15abfb869be8cd0804ccd9d52827f13f0d4435ed27859d3912bd3dd7f789c4d44b575ca2e22e71667757b7d1855bade4a2e7601784255a134dadaaad0641f23407d44704fc5bec7a96352c4cdd352197f43e804172ea1c9c5d47a56321b40e177443612a4aea9652006129a7b975d35cc809ffb39898910e94b02bfb7f1f3a322e40be4e3fc25015137c26f0d8e21f856e2330a1061345ea8e2f8dcc542aace8c7c5a39c1c0742c891d773fdc6f121662d8412f018c90a8b237108a4c128eb79535b55cd45c15297868591f561c0ff400ceeec4b82a57c5da93db0c94da0455bebeb53e0fce4fe3ef6f51e6b291beedaa9c9030cd7406e8debbd73a5e2b19383d477e4de3d06ec083997aefa101afc6a523164e2b459944ab31df13416430c69b58706aa3515175d13383c81deb4957d30b5df350667955070d68c6589fb2347405e9c926eebb4261eab2639f928310c41e8116eefdd6292ddc78f2d42263ae6f27e7e2d1529a15b720a4366bc37827ffe5923c6943ed33ec46534fc1935e87c7197e9265e0bffddf12929985d395904e8ffcea1209e4e30fe6e3c63944414eceaf4f32f2a9659fdcf93f9188e88b56abd3a6f1614955a8cc4ca83c4d25e3a04af4a79499d638d5593ac0e399eee10cbdb984564c2424b4f25706635271450931cdf44e946b6999db41c2f802d98aff0efff2a8ebcf075eccc501559b2b89782f98d787b732c276977fe7aaa69f73bf28fa0c5f61d2f46cad9cde413b1dd63b10338414a9afc37fd50192a034ab5d4b6c55fef24e7e0d09001fe6244318ec3ae3a2e8468bb3aa5c61917f9aa14819bda1c68f67a9995b33177edaa69ae214b943403fa2c6757cb3245dc272503aeb71483fb9890db2af78b5c1273767025435debb15d8cae03bc7c3097c3569f92d1a1e63f5eba73dbea36dcf5952132d2f49e0187006317949ff2b5b497274c465f0688630fa8387f06e7688a0df2b01e73bc83e502b71e15f2fc12eedf943748fdb9323af1f91c5ccbe67680de5f60032cb839c6f0d549199affe517b8d5d63d3f224f9a5ccf8dcfd87df139b6f14dd79ab35437e4e849638dcb85ba3709abe54a6fabcc397b592ae9d28aeb7a9997b526d389b9a3c279cdfb4a1c3858a9944e77a75fbe716fe873362a7ae1232e97e70c14bf565f09fc099c583c1aa47428025b6c3d3faaa99a619a27561a2c42f7942a6929e4d5f5c8016b553ecabb1c3d5ae97e830426d7f285ef39a3c32ee292da45f142d968eae6118aceb559fc096878cac9acb3886d4d59e1afd4fd219206dd22bc1ce11f77a095a9d66a8ddea5d17f1c29a6514cd76e3252a8942edb07b705be9707cd5682faabb819c1da1d6d46885ef7fd975039b9e250406341229a8c204602e61e7dbffe3c7d83fc87eeb5337d1d4fc1c3c54c53a6f50df1a6a65471652661852f891d313ced88be284f02d88d1b38118ebde7a0845884a47da9cad152f6ffed52bf4718a8320a03c38eb3d153b023cda76cf147ffa9b95f20581b3ccabdd28ffa8cd4afb9516fd1626a8608f16765996bab2991d505421fe31be3b0c9c6e122b52e5b2708f978ef75363db0b626f1946c4b39e3b247833f5cd0e9e9ff98f969402347e40242cadd85cf9befb9a5542360eaf2b49de1b8541190c9787c461d5bbe22d35da1dc480ab7e025446e627b3549a90a7bb5da17141fdaea62b1d545a34d1bb22eb0d16e6bb023e9a98087de06176590ba175444996bea26b1e893b7f7d99a73bfe8f99f90b15b576cc424bf1144b4a9cd9b9bf7e717d2de3f5571f2279bb268762ab6771cd82e752dbaf898bf14d58e5ec37a1bde470fc8ab0e2edf015a572697c6b2a3791d61e99e86d30dba057e1851c4b2c5ab4a0502a57e40b89ad0188602d0edce1e07ae0c7ee063ebbd41643c919d1f8caab51b099f29e016420007de53ca064551bd93be249d5e8392e27e9031e67445cab5b17a9121ead2e0364612df175d1ef6128aa484fd22374f6f7ded2c632f2240e8b946c35f6528eb8f63ab99afd1eeffdbd39b3243807d03afe0cc910f97b0fff2c72d908a42cac01fe5ab774bb6c3d03a4e402e2b2eb16916b39cc333868a1c203c6bf1a972355bceea2039bbba568ad9e851d28b8adcd0d9bba483d02b05e24913baf8243af32a1904122592797b637f452a030c8e16ddc81cfe63fd7524c7fce5cdab9c1ecbf80cb0de4f91b60455955b294ae</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-up">
      <input class="hbe hbe-input-field hbe-input-field-up" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-up" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-up">内容已加密，请输入密码后阅读</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>日记</category>
      </categories>
      <tags>
        <tag>随心记</tag>
      </tags>
  </entry>
  <entry>
    <title>罗丹日记2</title>
    <url>/2024/01/06/%E7%BD%97%E4%B8%B9%E6%97%A5%E8%AE%B02/</url>
    <content><![CDATA[]]></content>
  </entry>
</search>
